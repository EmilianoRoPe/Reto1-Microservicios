
worker_processes 1;
events { worker_connections 1024; }
http {
    sendfile on;
    default_type application/octet-stream;
    client_max_body_size 20M;
    server {
        listen 80;
        server_name _;

        # CORS headers para todas las rutas
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        # health/status simple
        location = /status {
            add_header Content-Type application/json;
            return 200 '{"status":"ok"}';
        }

        # Startups
        location /v1/api/startups/create {
            rewrite ^/v1/api/startups/create/?$ / break;
            proxy_pass http://startup-create:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/startups/read {
            rewrite ^/v1/api/startups/read/?$ / break;
            proxy_pass http://startup-read:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/startups/read/.*$ {
            rewrite ^/v1/api/startups/read(/.*)?$ $1 break;
            proxy_pass http://startup-read:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/startups/update {
            rewrite ^/v1/api/startups/update/?$ / break;
            proxy_pass http://startup-update:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/startups/update/.*$ {
            rewrite ^/v1/api/startups/update(/.*)?$ $1 break;
            proxy_pass http://startup-update:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/startups/delete {
            rewrite ^/v1/api/startups/delete/?$ / break;
            proxy_pass http://startup-delete:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/startups/delete/.*$ {
            rewrite ^/v1/api/startups/delete(/.*)?$ $1 break;
            proxy_pass http://startup-delete:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Technologies
        location /v1/api/technologies/create {
            rewrite ^/v1/api/technologies/create/?$ / break;
            proxy_pass http://technology-create:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/technologies/read {
            rewrite ^/v1/api/technologies/read/?$ / break;
            proxy_pass http://technology-read:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/technologies/read/.*$ {
            rewrite ^/v1/api/technologies/read(/.*)?$ $1 break;
            proxy_pass http://technology-read:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/technologies/update {
            rewrite ^/v1/api/technologies/update/?$ / break;
            proxy_pass http://technology-update:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/technologies/update/.*$ {
            rewrite ^/v1/api/technologies/update(/.*)?$ $1 break;
            proxy_pass http://technology-update:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /v1/api/technologies/delete {
            rewrite ^/v1/api/technologies/delete/?$ / break;
            proxy_pass http://technology-delete:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ~ ^/v1/api/technologies/delete/.*$ {
            rewrite ^/v1/api/technologies/delete(/.*)?$ $1 break;
            proxy_pass http://technology-delete:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # OPTIONS catch-all for preflight (CORS)
        location / {
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
    }
}

